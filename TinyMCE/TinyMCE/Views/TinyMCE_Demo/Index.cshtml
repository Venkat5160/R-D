@model TinyMCE.Models.TinyDemoModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "TinyMCE_Demo", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div>
        @Html.TextAreaFor(m => m.Template)
    </div><br />
    <div>
        <input type="submit" id="btn" value="Save" />
    </div>
    
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.js"></script>
    <script type="text/javascript">

        //tinymce.init({
        //    selector: "textarea",
        //    plugins: "table",
        //    plugins: "paste",
        //    menubar: "edit",
        //    toolbar: "paste",
        //    table_cell_class_list: [
        //{title: 'None', value: ''},
        //{title: 'Dog', value: 'dog'},
        //{title: 'Cat', value: 'cat'}
        //    ],
        //    content_css: [
        //     '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
        //     '//www.tinymce.com/css/codepen.min.css',
        //    ],

        //})


        tinymce.init({
            selector: 'textarea',
            height: 200,
            menubar: false,
            //plugins: [
            //  'advlist autolink lists link image charmap print preview anchor',
            //  'searchreplace visualblocks advcode fullscreen',
            //  'insertdatetime media table contextmenu powerpaste'
            //],
            //toolbar: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image code',
           // powerpaste_allow_local_images: true,
           // powerpaste_word_import: 'prompt',
            //powerpaste_html_import: 'prompt',
            //content_css: [
            //  '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
            //  '//www.tinymce.com/css/codepen.min.css'],

        //    paste_preprocess: function (plugin, args) {
        //    debugger;
        //    var string = args.content;
        //    string = string.replace('cellspacing=0', 'cellspacing=1').replace('border=0', 'border=1').replace("cellpadding=0", "cellpadding=1")
        //    console.log('Object', string);
        //    console.log('Content:', string);
        //    },

        //paste_postprocess: function (plugin, args) {
        //    debugger;
        //    var description = '<div>' + args.node.innerHTML + '</div>';
        //    var table = $(description).find('table');
        //    var description = '<div>' + args.node.innerHTML + '</div>';
        //    description = description.replace('cellspacing="0"', 'cellspacing="1"').replace('border="0"', 'border="1"').replace('cellpadding="0"', 'cellpadding="1"')
        //    console.log(description);
        //    // args.node.setAttribute('id', '42');
        //},
        });


        //tinymce.PluginManager.add('example', function (editor, url) {
        //    debugger;
        //    // Add a button that opens a window
        //    editor.addButton('example', {
        //        text: 'My button',
        //        icon: true,
        //        onclick: function () {
        //            debugger;
        //            // Open window
        //            editor.windowManager.open({
        //                title: 'Example plugin',
        //                body: [
        //                  { type: 'textbox', name: 'title', label: 'Title' }
        //                ],
        //                onsubmit: function (e) {
        //                    debugger;
        //                    // Insert content when the window form is submitted
        //                    editor.insertContent('Title: ' + e.data.title);
        //                }
        //            });
        //        }
        //    });

        //    //// Adds a menu item to the tools menu
        //    //editor.addMenuItem('example', {
        //    //    text: 'Example plugin',
        //    //    context: 'tools',
        //    //    onclick: function () {
        //    //        debugger;
        //    //        // Open window with a specific url
        //    //        editor.windowManager.open({
        //    //            title: 'TinyMCE site',
        //    //            url: 'http://www.tinymce.com',
        //    //            width: 800,
        //    //            height: 600,
        //    //            buttons: [{
        //    //                text: 'Close',
        //    //                onclick: 'close'
        //    //            }]
        //    //        });
        //    //    }
        //    //});
        //});

        //tinymce.init({
        //    selector: 'textarea',
        //    height: 300,
        //    theme: 'modern',
        //    plugins: [
        //      'advlist autolink lists link image charmap print preview hr anchor pagebreak',
        //      'searchreplace wordcount visualblocks visualchars code fullscreen',
        //      'insertdatetime media nonbreaking save table contextmenu directionality',
        //      'emoticons template paste textcolor colorpicker textpattern imagetools codesample toc help'
        //    ],
        //    toolbar1: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        //    toolbar2: 'print preview media | forecolor backcolor emoticons | codesample help',
        //    image_advtab: true,
        //    templates: [
        //      { title: 'test template 1', content: 'test 1' },
        //      { title: 'test template 2', content: 'test 2' }
        //    ],
        //    content_css: [
        //      '//fonts.googleapis.com/css?family=lato:300,300i,400,400i',
        //      '//www.tinymce.com/css/codepen.min.css'
        //    ]
        //});

        //tinymce.init({
        //    selector: 'textarea',
        //    height: 200,
        //    menubar: true,
        //    plugins: [
        //      'advlist autolink lists link image charmap print preview anchor',
        //      'searchreplace visualblocks advcode fullscreen',
        //      'insertdatetime media table contextmenu powerpaste'
        //    ],
        //    plugins: "paste,table",
        //    //menubar: "edit",
        //    toolbar: "paste",
        //    //toolbar3: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image code',
        //    toolbar1:"insertfile undo redo pastetext | styleselect | fontselect | fontsizeselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
        //    toolbar2: "print preview media | forecolor backcolor emoticons | code | table",
        //    powerpaste_allow_local_images: true,
        //    powerpaste_word_import: 'prompt',
        //    powerpaste_html_import: 'prompt',
        //    table_advtab: false,
        //    content_css: [
        //      '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
        //      '//www.tinymce.com/css/codepen.min.css'],
        //    extended_valid_elements: "table[style|class|border=1|width|cellspacing=1|cellpadding=1|bgcolor],colgroup,col[style|width],tbody,tr[style|class],td[style|class|colspan|rowspan|width|height],hr[class|width|size|noshade],font[face|size|color|style],span[class|align|style]",
        //    paste_auto_cleanup_on_paste: false,

        //    paste_preprocess: function (plugin, args) {
        //        debugger;
        //        var string = args.content;
        //        string = string.replace('cellspacing=0', 'cellspacing=1').replace('border=0', 'border=1').replace("cellpadding=0", "cellpadding=1")
        //        console.log('Object', string);
        //        console.log('Content:', string);
        //    },
        //    paste_postprocess: function (plugin, args) {
        //        debugger;


        //        var description = '<div>' + args.node.innerHTML + '</div>';
        //        var table = $(description).find('table');


        //        var description = '<div>' + args.node.innerHTML + '</div>';
        //        description = description.replace('cellspacing="0"', 'cellspacing="1"').replace('border="0"', 'border="1"').replace('cellpadding="0"', 'cellpadding="1"')
        //        console.log(description);
        //       // args.node.setAttribute('id', '42');
        //    },
        //    //paste_postprocess: function (plugin, args) {
        //    //    args.node.outerHTML.replace('cellspacing="0"', 'cellspacing="1"').replace('border="0"', 'border="1"').replace('cellpadding="0"', 'cellpadding="1"')
        //    //    console.log(args.node);
        //    //    args.node.setAttribute('id', '42');
        //    //},
        //    //paste_preprocess: function (plugin, args) {
        //    //    console.log(args.content);
        //    //    args.content.replace('cellspacing=0', 'cellspacing=1').replace('border=0', 'border=1').replace("cellpadding=0", "cellpadding=1")
        //    //    args.content += ' preprocess';
        //    //}

        //});


        //{
        //    id:'content'
        //    name:'contentToBindWith'
        //    xtype:'textarea'
        //    autoScroll:true;
        //    listeners:{
        //        afterrender: {
        //            debugger;
        //            tinymce.init({
        //                selector: "textarea",
        //                id: "tinymce_jquery_editor",
        //                name: "tinymce_jquery_editor",
        //                autoWidth:true,
        //                height:200,
        //                /*give desired font size*/
        //                fontsize_formats: "8pt 9pt 10pt 11pt 12pt 14pt 16pt 18pt 20pt 26pt 36pt",
        //                /*To Customize Menubar*/
        //                //menubar: "file edit view insert format tools table",
        //                /*To Enable/Disable Menubar give true/false*/
        //                menubar: true,
        //                /* configure the menu items*/
        //                menu : {
        //                    file   : {title : 'File'  , items : 'newdocument'},
        //                    edit   : {title : 'Edit'  , items : 'undo redo | cut copy paste pastetext | selectall'},
        //                    insert : {title : 'Insert', items : 'link media | template hr'},
        //                    view   : {title : 'View'  , items : 'visualaid'},
        //                    format : {title : 'Format', items : 'bold italic underline strikethrough superscript subscript | formats | removeformat'},
        //                    table  : {title : 'Table' , items : 'inserttable tableprops deletetable | cell row column'},
        //                    tools: { title: 'Tools', items: 'spellchecker code' },

        //                },
        //                plugins: [
        //                    "advlist autolink lists link image charmap print preview hr anchor pagebreak",
        //                    "searchreplace wordcount visualblocks visualchars code fullscreen",
        //                    "insertdatetime media nonbreaking save table contextmenu directionality",
        //                    "emoticons template textcolor paste"
        //                ],
        //                toolbar1:"insertfile undo redo pastetext | styleselect | fontselect | fontsizeselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
        //                toolbar2:"print preview media | forecolor backcolor emoticons | code | table",
        //                theme: "modern",
        //                //content_css: "../css/tinymce_editor_custom.css",
        //                statusbar: false,
        //                verify_html: true,
        //                theme_advanced_resizing: false,
        //                verify_html: true,
        //                forced_root_block: 'div',
        //                force_br_newlines: true,
        //                force_p_newlines: false,
        //                remove_linebreaks: false,
        //                remove_trailing_nbsp: false,
        //                paste_auto_cleanup_on_paste: false,
        //                //browser_spellcheck : true,
        //                /*Excel copy-paste Utility :Starts*/
        //                paste_retain_style_properties : "all",
        //                paste_strip_class_attributes : "none",
        //                //paste_remove_spans : true,
        //                /*Excel copy-paste Utility :Ends*/
        //                extended_valid_elements:"a[name|href|target|title|onclick],img[class|src|border=1|alt|title|hspace|vspace|width|height|align|onmouseover|onmouseout|name],table[style|class|border=2|width|cellspacing=1|cellpadding=1|bgcolor],colgroup,col[style|width],tbody,tr[style|class],td[style|class|colspan|rowspan|width|height],hr[class|width|size|noshade],font[face|size|color|style],span[class|align|style]",
        //                setup : function (ed) {
        //                    /*Here give the id of above textarea component to load default text inside*/
        //                    $('#content').val('Test Content');
        //                },

        //                paste_postprocess: function (plugin, args) {
        //                    debugger;
        //                    //args.table.border = "1";
        //               var xyz= args.node.outerHTML.replace('cellspacing="0"', 'cellspacing="1"').replace('border="0"', 'border="1"').replace('cellpadding="0"', 'cellpadding="1"')
        //                console.log(xyz);
        //                args.node.setAttribute('id', '42');
        //            },
        //                paste_preprocess: function (plugin, args) {
        //                    debugger;
        //                console.log(args.content);
        //                args.content.replace('cellspacing=0', 'cellspacing=1').replace('border=0', 'border=1').replace("cellpadding=0", "cellpadding=1")
        //                args.content += ' preprocess';
        //            }
        //            });
        //        };
        //    }
        //}

    </script>
}
