//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Linq.Expressions;
using System.Linq;
using System.Data.Objects;

using FastDatabaseQuery;
using smsg_DAL;

namespace smsg_DAL
{
    [System.Diagnostics.DebuggerDisplayAttribute("smsg_User_List Count={Count}")]
    public partial class smsg_User_List : ColList<smsg_User>
    {
    
    #region FieldNames
    public class fieldNames
    {
            public readonly string IDUser = "IDUser"; 
            public readonly string UserName = "UserName"; 
            public readonly string UserEmail = "UserEmail"; 
        }
    #endregion
    private static readonly fieldNames s_fields =new fieldNames();
    public static fieldNames FieldNames
    {
        get
        {
            return s_fields;
        }
    }
        #region Find
        public void InitFind()
        {
            base.LoadFromDB = new smsg_User_FindDB(this);			
            //base.FindInCollection = new smsg_User_Find(this);
        }
        public new smsg_User_FindDB LoadFromDB
        {
            get
            {
                return base.LoadFromDB as smsg_User_FindDB;
            }
            set
            {
                base.LoadFromDB = value;
            }
    
        }
        /*
        public new smsg_User_Find FindInCollection
        {
            get
            {
                return base.FindInCollection as smsg_User_Find;
            }
            set
            {
                base.FindInCollection = value;
            }
    
        }
        */
        
        
        #endregion
        #region Constructors
        partial void OnInit();
        public smsg_User_List()
            : base()
            {
                OnInit();
                InitFind();
                base.BeforeSave+=new EventHandler<EventArgs>(smsg_User_List_BeforeSave);
            }
    
             
             void smsg_User_List_BeforeSave(object sender, EventArgs e)
                 {
                     var Visitor=new smsg_User_Visitor();
                     base.Conection.ChangeTracker.DetectChanges();
                     foreach(var item in base.Conection.ChangeTracker.Entries().Where(p => p.State == System.Data.EntityState.Added || p.State == System.Data.EntityState.Deleted || p.State == System.Data.EntityState.Modified))
                     {
                         var obj = item.CurrentValues.ToObject();
                         var rv = obj as smsg_User;
                         if (rv != null)
                         {
                              Console.WriteLine(rv.Accept(Visitor));
                         }
                         
    
                     }
                    
                 }
    
    
        public smsg_User_List(IObjectConnection con)
            : base(con)
            {
                OnInit();
                InitFind();
                base.BeforeSave+=new EventHandler<EventArgs>(smsg_User_List_BeforeSave);
            }
            private smsg_User_List(ObjectContext con)
            : base(con)
            {
                OnInit();
                InitFind();
                base.BeforeSave+=new EventHandler<EventArgs>(smsg_User_List_BeforeSave);
            }
        public smsg_User_List(string con)
            : base()
            {
                OnInit();
                base.Conection =new SMsgSEntities(con);
                InitFind();
                base.BeforeSave+=new EventHandler<EventArgs>(smsg_User_List_BeforeSave);
            }
        #endregion
        partial void OnBeginFastDeleteAll();
        public void FastDeleteAll()
        {
            OnBeginFastDeleteAll();
            //TODO: prefix
            ExecuteCommand(@"delete from smsg_User");
        }
    
        public void ExecuteCommand(string Command){
          base.Conection.Database.ExecuteSqlCommand(Command);
        }
            public void Update_IDUser(string value)
        {
            
            foreach(var item in this)
            {
                //TODO: prefix
                base.Conection.Database.ExecuteSqlCommand("update smsg_User set IDUser = {0} where (IDUser= {1}) ",value, item.IDUser);
            }
        }
            public void Update_UserName(string value)
        {
            
            foreach(var item in this)
            {
                //TODO: prefix
                base.Conection.Database.ExecuteSqlCommand("update smsg_User set UserName = {0} where (IDUser= {1}) ",value, item.IDUser);
            }
        }
            public void Update_UserEmail(string value)
        {
            
            foreach(var item in this)
            {
                //TODO: prefix
                base.Conection.Database.ExecuteSqlCommand("update smsg_User set UserEmail = {0} where (IDUser= {1}) ",value, item.IDUser);
            }
        }
            public void ExecuteCommandForAll<T>(string Command,Func<smsg_User, T> value)
        {
            foreach(var item in this)
            {
                T val=value(item);
                base.Conection.Database.ExecuteSqlCommand(Command,val);
            }
        }
        public void ExecuteCommandForAll_FormatPK(string Command){
            foreach(var item in this)
            {
                string cmd=string.Format(Command ,"IDUser");
                base.Conection.Database.ExecuteSqlCommand(cmd);
            }
        }
    
    }
}
